module project.resources;

static const resource_txt = [
	"313233343536383720393837343132353820393637383933323534373531",
	
	"89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF610000001974455874536F6674776172650041646F626520496D616765526561647971C9653C000000984944415478DA62FCFFFF3F0325800544DCBB77EF0090B22751EF4125252507B0014057D89361B93DDC05FFFEFDA3CC0B7FFFFE850BD4D5D581E9A6A6261485B8C4310CF8F3E70F03BA183E710C2FC014A27B0B973823281A2F5CB840565C1A181830B2209B4E954024CB00647F151717E3D5D0DBDB4B5C2CE00258630159B0BBBB9B7403284E8940034099C98144BD07E0E980120010600044976348725D6E140000000049454E44AE426082",
	
	
	"A469D4B5F6DF896AD84687D64F654DB0D4B6D406B46D874B6A40D4886ADAD48AD464DA8B86A4BD684ADB7867AD6B48A4D7BA64DB4564654DA4B64A6DB7AD1B23A1D32A4B6AD45B41A3D4B416AD4BA68D4B65A4DB6565E6B6D54F6E464A65465D44C665D4C6D4646D4C",
	"E0BA82E0BAADE0BB89E0BA8DE0BA81E0BAB4E0BA99E0BB81E0BA81E0BB89E0BAA7E0BB84E0BA94E0BB89E0BB82E0BA94E0BA8DE0BA97E0BAB5E0BB88E0BAA1E0BAB1E0BA99E0BA9AE0BB8DE0BB88E0BB84E0BA94E0BB89E0BB80E0BAAEE0BAB1E0BA94E0BB83E0BAABE0BB89E0BA82E0BAADE0BB89E0BA8DE0BB80E0BA88E0BAB1E0BA9A",
	"E0A4AE20E0A495E0A4BEE0A481E0A49A20E0A496E0A4BEE0A4A820E0A4B8E0A495E0A58DE0A49BE0A58220E0A4B020E0A4AEE0A4B2E0A4BEE0A48820E0A495E0A587E0A4B9E0A4BF20E0A4A8E0A58020E0A4B9E0A581E0A4A8E0A58DE2808DE0A4A8E0A58D"
];

static const resource_idt = [
	"res_ansi_1",
	"res_ansi_2",
	"res_img1",
	"res_img2",
	"res_img3",
	"res_rnd1",
	"res_utf8_1",
	"res_utf8_2"
];

static const resource_enc = [
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16,
	ResEncoding.base16 
];

static const resource_sumi = [
	832533648,
	1951281988,
	3830768605,
	3119248986,
	2501545372,
	9092863,
	2472579997,
	2342516385
];

static const resource_sume = [
	471418432,
	2518604207,
	543641089,
	149048335,
	1068072948,
	469500517,
	1406068463,
	143152600
];

/// enumerates the supported encoder kinds.
public enum ResEncoding {
    raw, base16, base64, z85
};

/// returns the index of the resource associated to resIdent.
public size_t resourceIndex(string resIdent){
    import std.algorithm;
    return countUntil(resource_idt, resIdent);
}

/// returns the identifier of the resIndex-th resource.
public string resourceIdent(size_t resIndex){
    return resource_idt[resIndex];
}

/// returns true if the encoded form of a resource is corrupted.
public bool isResourceEncCorrupted(size_t resIndex){
    import std.digest.crc;
    CRC32 hash;
    hash.put(cast(ubyte[])resource_txt[resIndex]);
    auto summarr = hash.finish;
    //
    uint sum;
    ubyte* ptr = cast(ubyte*) &sum;
    version(BigEndian)
        foreach(i; 0..4) * (ptr + i) = summarr[i];
    else
        foreach(i; 0..4) * (ptr + i) = summarr[3-i];
    return sum != resource_sume[resIndex];
}

/// returns the encoder kind of the resIndex-th resource.
public ResEncoding resourceEncoding(size_t resIndex){
    import std.conv;
    return to!ResEncoding(resource_enc[resIndex]);
}

/// decodes the resIndex-th resource in dest.
public bool decode(size_t resIndex, ref ubyte[] dest){
    scope(failure) return false;
    final switch(resourceEncoding(resIndex)){
        case ResEncoding.raw    : decoderaw(resIndex, dest); break;
        case ResEncoding.base16 : decodeb16(resIndex, dest); break;
        case ResEncoding.base64 : decodeb64(resIndex, dest); break;
        case ResEncoding.z85    : decodez85(resIndex, dest); break;
    }
    return true;
}

private void decoderaw(size_t resIndex, ref ubyte[] dest){
    dest = cast(ubyte[])resource_txt[resIndex];
}

private void decodeb16(size_t resIndex, ref ubyte[] dest){
    import std.conv;
    dest.length = resource_txt[resIndex].length / 2;
    foreach(i; 0 .. dest.length){
        dest[i] = to!ubyte(resource_txt[resIndex][i * 2 .. i * 2 + 2], 16);
    }
}

private void decodeb64(size_t resIndex, ref ubyte[] dest){
    import std.base64;
    dest = Base64.decode(resource_txt[resIndex]);
}
// cf. with z85_d for more information.
private ubyte[] Z85_decode (char[] input)
{
    ///  Maps base 85 to base 256
    static immutable ubyte[96] decoder = [
        0x00, 0x44, 0x00, 0x54, 0x53, 0x52, 0x48, 0x00,
        0x4B, 0x4C, 0x46, 0x41, 0x00, 0x3F, 0x3E, 0x45,
        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
        0x08, 0x09, 0x40, 0x00, 0x49, 0x42, 0x4A, 0x47,
        0x51, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A,
        0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32,
        0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A,
        0x3B, 0x3C, 0x3D, 0x4D, 0x00, 0x4E, 0x43, 0x00,
        0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
        0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18,
        0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
        0x21, 0x22, 0x23, 0x4F, 0x00, 0x50, 0x00, 0x00
    ];

    // reference implementation
    size_t decoded_size = input.length * 4 / 5;
    ubyte[] decoded;
    decoded.length = decoded_size;
    uint byte_nbr;
    uint char_nbr;
    uint value;
    while (char_nbr < input.length)
    {
        value = value * 85 + decoder [cast(ubyte) input[char_nbr++] - 32];
        if (char_nbr % 5 == 0)
        {
            uint divisor = 256 * 256 * 256;
            while (divisor)
            {
                decoded[byte_nbr++] = value / divisor % 256;
                divisor /= 256;
            }
            value = 0;
        }
    }
    assert (byte_nbr == decoded_size);

    // removes the tail things.
    ubyte added = decoded[$-4];
    decoded = decoded[0..$- (4 + added)];

    return decoded;
}

private void decodez85(size_t resIndex, ref ubyte[] dest){
    dest = Z85_decode(resource_txt[resIndex]);
}

